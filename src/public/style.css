*, ::before, ::after {
  box-sizing: border-box;
}

/* =============================== variables =============================== */

:root {
  --box-foreground: #ddd;
  --box-background: linear-gradient(to top, #001, #003);
  --box-accent: #fff;
  --callout-foreground: #26D0CE;
  --callout-background: #1A2980;
  --callout-accent: #ec38bc;
  --code-background: rgba(0, 0, 153, 0.4);
  --dot-pattern: radial-gradient(var(--callout-background) 15%, rgba(0, 0, 17, .3) 16%);
  --cube-face: linear-gradient(to top, var(--callout-foreground), var(--callout-background));
  --wide-font:  'Syncopate', sans-serif;
  --maximum-width: 860px;

  --density: .5rem;
  --text-detail: .8em;
  --text-title: 2em;
}

/* =============================== density shifts styles =============================== */

body {
  --space-near: calc(4 * var(--density));
  --space-away: calc(8 * var(--density));
  font-size: 1.5625rem;
  line-height: calc(2.5rem + var(--density));
}

body [data-density-shift] {
  --space-near: calc(2 * var(--density));
  --space-away: calc(4 * var(--density));
  font-size: 1.25rem;
  line-height: calc(1.5rem + var(--density));
}

body [data-density-shift] [data-density-shift] {
  --space-near: calc(1 * var(--density));
  --space-away: calc(2 * var(--density));
  font-size: 1rem;
  line-height: calc(1rem + var(--density));
}

/* =============================== general styles =============================== */

body {
  margin: 0;
  min-height: 100vh;
  font-family: 'Poppins', sans-serif;
  color: var(--box-foreground);
  background: var(--box-background);
  background-attachment: fixed;
}

a, strong {
  color: var(--callout-accent);
  font-weight: bolder;
}

a {
  text-underline-offset: 4px;
  text-decoration-thickness: 1px;
  position: relative;
}

a[id] {
  text-decoration: none;
  font-family: monospace;
}

main {
  perspective: 1px;
  height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
  scroll-behavior: smooth;
  padding: var(--space-away);
}

section { 
  margin-bottom: var(--space-away);
}

p {
  margin-block: var(--space-near);
}

.max-content {
  max-width: calc(var(--maximum-width) - var(--space-near));
  margin-inline: auto;
}

/* =============================== polka-dot area styles =============================== */

.callout,
.content blockquote,
.content > :not(p, img, blockquote, hr, pre, ul) + p::first-letter {
  background-image: var(--dot-pattern);
  background-size: var(--space-near) var(--space-near);
  background-position: center;
  background-attachment: fixed;
  border: 1px solid;
  padding: var(--space-near);
}

/* =============================== hero styles =============================== */

.hero {
  aspect-ratio: 2/1;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  flex-direction: column;
  gap: var(--space-near);
  padding: var(--space-away);
}

.hero h1 {
  text-transform: uppercase;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  font-size: min(3.2em, 7vw);
  filter: drop-shadow(0 .125em 3px #000000);
  margin: 0;
}

.hero h1 strong {
  font-size: 50%;
  --letter-spacing: min(.73em, 3vw);
  letter-spacing: var(--letter-spacing);
  text-indent: var(--letter-spacing);
}

.hero h1 span {
  font-family: var(--wide-font);
  line-height: 1;
  --letter-spacing: min(1.1em, 9vw);
  letter-spacing: var(--letter-spacing);
  text-indent: var(--letter-spacing);
  color: var(--box-accent);
}

.hero p {
  max-width: 45ch;
  padding-inline: var(--space-near);
  color: var(--callout-foreground);
  margin: 0;
}

/* =============================== content styles =============================== */

.content h3 {
  margin-top: var(--space-away);
  margin-bottom: 0;
  text-transform: uppercase;
  font-size: var(--text-detail);
  color: var(--callout-foreground);
}

.content blockquote h4 {
  margin: 0;
  text-transform: uppercase;
  font-size: var(--text-detail);
  color: var(--callout-foreground);
}

.content h3 + h2 {
  font-size: var(--text-title);
  color: var(--box-accent);
  margin-top: 0;
  margin-bottom: var(--space-away);
  line-height: 1.1;
}

.content > :not(p, img, blockquote, hr, pre, ul) + p::first-letter {
  font-family: var(--wide-font);
  float: left;
  line-height: 1rem;
  margin-inline-end: var(--density);
  margin-block-start: var(--density);
  font-size: 150%;
}

.content :where(p, img, blockquote, hr, pre, ul) + p {
  text-indent: 4ch;
}

.content :where(blockquote, hr) {
  margin: var(--space-away) 0;
}

.content img {
  width: 100%;
  display: inline-block;
  margin-block: var(--space-away);
}

.content blockquote {
  padding: var(--space-away);
}

.content blockquote p:first-child {
  margin-block-start: 0;
}

.content blockquote p:last-child {
  margin-block-end: 0;
}

.content pre {
  background: var(--code-background);
  padding: var(--space-away);
  border-radius: .25em;
}

.content :not(pre) code {
  background: var(--code-background);
  padding: .125em .25em;
  border-radius: .25em;
  display: inline-block;
  text-indent: initial;
}

pre .token.variable {
  font-weight: bolder;
  color: var(--callout-accent);
}

pre .token.comment {
  opacity: .4;
}

.content hr {
  max-width: 200px;
  margin-inline: auto;
  border: 0;
  border-top: 1px solid;
}

.content p > strong {
  font-weight: 500;
}

.content sup {
  display: inline-block;
  text-indent: 0;
  margin-block-start: -1em;
}

.footnotes {
  font-size: var(--text-detail);
}

.footnotes li {
  position: relative;
}

.footnotes li:after {
  content: '';
  pointer-events: none;
  z-index: -1;
  height: 100%;
  width: 100%;
  box-sizing: content-box;
  position: absolute;
  padding: var(--space-away);
  top: 0;
  left: 0;
  margin: calc( var(--space-away) * -1);
}

.footnotes li:target:after {
  background: var(--code-background);
}

/* =============================== cube accent styles =============================== */

.cubes {
  position: absolute;
  inset: 0;
  z-index: -1;
  transform: translateZ(-1px) scale(2);
  opacity: .3;
}

.cube {
  transform-style: preserve-3d;
  transform: translateY(0em) rotate3d(1, 1, 1, var(--cube-rotation));
  animation: float 5s var(--cube-float) ease-in-out alternate infinite;
  background-image: var(--cube-face);
  height: var(--cube-size);
  width: var(--cube-size);
  transform-origin: center;
  position: absolute;
}

@keyframes float {
  to { transform: translateY(1em) rotate3d(1.1, .9, -.1, var(--cube-rotation)); }
}

.cube:before,
.cube:after {
  content: '';
  height: inherit;
  width: inherit;
  background: inherit;
  position: absolute;
}

.cube:before {
  transform: 
    rotateX(90deg) 
    translateY(calc(var(--cube-size) / -2)) 
    translateZ(calc(var(--cube-size) / -2));
}

.cube:after {
  transform: 
    rotateY(90deg) 
    translateX(calc(var(--cube-size) / 2))
    translateZ(calc(var(--cube-size) / -2));
}